# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Release Scraper

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Install Deps
      run: |
        sudo apt-get install -y gcc-mingw-w64 gcc-multilib xorg-dev

    - name: Build Linux
      run: |
        cd Scraper_Go
        go build -v scraper

    - name: Build Windows
      run: |
        export CGO_ENABLED=1
        cd Scraper_Go
        go clean -modcache
        env GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc go build -v scraper

    - name: Move Executables
      run: |
        cp Scraper_Go/scraper executables/scraper_linux
        cp Scraper_Go/scraper.exe executables
        ls -a executables

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload linux executable
      uses: AButler/upload-release-assets@v2.0
      with:
        files: executables/scraper_linux
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ github.run_id }}

    - name: upload windows executable
      uses: AButler/upload-release-assets@v2.0
      with:
        files: executables/scraper.exe; Scraper_Go/scraper_config.json
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ github.run_id }}

    - name: upload config
      uses: AButler/upload-release-assets@v2.0
      with:
        files: Scraper_Go/scraper_config.json
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ github.run_id }}